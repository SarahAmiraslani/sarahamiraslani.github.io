async function optimizeImages(){console.log("Starting image optimization...");try{const o=fs.readdirSync(inputDir).filter(e=>{const o=path.extname(e).toLowerCase();return[".jpg",".jpeg",".png",".gif",".webp"].includes(o)});console.log(`Found ${o.length} images to optimize`);for(const t of o){const o=path.join(inputDir,t),i=path.join(outputDir,t);fs.copyFileSync(o,i);const s=path.extname(t).toLowerCase(),n=path.basename(t,s);if([".jpg",".jpeg",".png"].includes(s))try{path.join(outputDir,`${n}.webp`);console.log(`\u2705 Processed ${t}`)}catch(e){console.log(`\u26a0\ufe0f  Could not create WebP for ${t}: ${e.message}`)}}console.log("\ud83c\udf89 Image optimization complete!"),console.log(`\ud83d\udcc1 Optimized images saved to: ${outputDir}`)}catch(e){console.error("\u274c Error optimizing images:",e)}}const fs=require("fs"),path=require("path"),{execSync:execSync}=require("child_process"),inputDir="assets/img",outputDir="assets/img/optimized";fs.existsSync(outputDir)||fs.mkdirSync(outputDir,{recursive:!0}),optimizeImages();